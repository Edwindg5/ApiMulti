"""Descripción de la migración

Revision ID: a8238dffc468
Revises: 
Create Date: 2024-11-19 11:13:24.124791

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a8238dffc468'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('trades')
    op.drop_table('shopping_cart')
    op.drop_index('idx_categoria_id', table_name='items')
    op.drop_index('idx_usuario_id', table_name='items')
    op.drop_table('items')
    op.drop_table('rating_history')
    op.drop_table('loan_items')
    op.drop_table('notifications')
    op.drop_table('transaction_history')
    op.drop_table('categories')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id_usuario', sa.INTEGER(), server_default=sa.text("nextval('users_id_usuario_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('correo_electronico', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('contrasena', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('telefono', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('calificacion', sa.NUMERIC(precision=3, scale=2), autoincrement=False, nullable=True),
    sa.Column('fecha_registro', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('rol', postgresql.ENUM('ADMIN', 'USER', name='user_role'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id_usuario', name='users_pkey'),
    sa.UniqueConstraint('correo_electronico', name='users_correo_electronico_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('categories',
    sa.Column('id_categoria', sa.INTEGER(), server_default=sa.text("nextval('categories_id_categoria_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nombre_categoria', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('descripcion_categoria', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id_categoria', name='categories_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('transaction_history',
    sa.Column('id_transaction', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('articulo_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tipo_transaccion', postgresql.ENUM('PENDING', 'COMPLETED', 'CANCELLED', 'VENTA', 'INTERCAMBIO', 'DONACIÓN', 'DISPONIBLE', 'NO_DISPONIBLE', 'ELIMINADO', 'COMPRA', name='transaction_status'), autoincrement=False, nullable=True),
    sa.Column('fecha_transaccion', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('estado_transaccion', postgresql.ENUM('PENDING', 'COMPLETED', 'CANCELLED', 'VENTA', 'INTERCAMBIO', 'DONACIÓN', 'DISPONIBLE', 'NO_DISPONIBLE', 'ELIMINADO', 'COMPRA', name='transaction_status'), autoincrement=False, nullable=True),
    sa.Column('detalles', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['articulo_id'], ['items.id_articulo'], name='transaction_history_articulo_id_fkey'),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id_usuario'], name='transaction_history_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id_transaction', name='transaction_history_pkey')
    )
    op.create_table('notifications',
    sa.Column('id_notificacion', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('mensaje', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('leido', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('fecha', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id_usuario'], name='notifications_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id_notificacion', name='notifications_pkey')
    )
    op.create_table('loan_items',
    sa.Column('id_loan_items', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('articulo_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('prestador_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('prestatario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fecha_prestamo', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('fecha_devolucion', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('estado', postgresql.ENUM('PENDING', 'COMPLETED', 'CANCELLED', 'VENTA', 'INTERCAMBIO', 'DONACIÓN', 'DISPONIBLE', 'NO_DISPONIBLE', 'ELIMINADO', 'COMPRA', name='transaction_status'), autoincrement=False, nullable=True),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('nombre_prestamo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['articulo_id'], ['items.id_articulo'], name='loan_items_articulo_id_fkey'),
    sa.ForeignKeyConstraint(['prestador_id'], ['users.id_usuario'], name='loan_items_prestador_id_fkey'),
    sa.ForeignKeyConstraint(['prestatario_id'], ['users.id_usuario'], name='loan_items_prestatario_id_fkey'),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id_usuario'], name='loan_items_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id_loan_items', name='loan_items_pkey')
    )
    op.create_table('rating_history',
    sa.Column('id_rating', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('calificador_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('calificacion', sa.NUMERIC(precision=3, scale=2), autoincrement=False, nullable=True),
    sa.Column('comentario', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('fecha_calificacion', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['calificador_id'], ['users.id_usuario'], name='rating_history_calificador_id_fkey'),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id_usuario'], name='rating_history_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id_rating', name='rating_history_pkey')
    )
    op.create_table('items',
    sa.Column('id_articulo', sa.INTEGER(), server_default=sa.text("nextval('items_id_articulo_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('nombre_articulo', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('descripcion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('categoria_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('precio', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('tipo_transaccion', postgresql.ENUM('COMPRA', 'VENTA', 'INTERCAMBIO', 'PRESTAMO', name='transactiontype'), autoincrement=False, nullable=True),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('estado', postgresql.ENUM('PENDING', 'COMPLETED', 'CANCELLED', 'VENTA', 'INTERCAMBIO', 'DONACIÓN', 'DISPONIBLE', 'NO_DISPONIBLE', 'ELIMINADO', 'COMPRA', name='transaction_status'), autoincrement=False, nullable=True),
    sa.Column('fecha_publicacion', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['categoria_id'], ['categories.id_categoria'], name='items_categoria_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id_usuario'], name='fk_usuario_id', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_articulo', name='items_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('idx_usuario_id', 'items', ['usuario_id'], unique=False)
    op.create_index('idx_categoria_id', 'items', ['categoria_id'], unique=False)
    op.create_table('shopping_cart',
    sa.Column('id_shopping_cart', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('articulo_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cantidad', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fecha_agregado', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['articulo_id'], ['items.id_articulo'], name='shopping_cart_articulo_id_fkey'),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id_usuario'], name='shopping_cart_usuario_id_fkey'),
    sa.PrimaryKeyConstraint('id_shopping_cart', name='shopping_cart_pkey')
    )
    op.create_table('trades',
    sa.Column('id_trade', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('articulo_solicitado_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('articulo_ofrecido_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('usuario_solicitante_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('usuario_ofertador_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('fecha_oferta', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('estado', postgresql.ENUM('PENDING', 'COMPLETED', 'CANCELLED', 'VENTA', 'INTERCAMBIO', 'DONACIÓN', 'DISPONIBLE', 'NO_DISPONIBLE', 'ELIMINADO', 'COMPRA', name='transaction_status'), autoincrement=False, nullable=True),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['articulo_ofrecido_id'], ['items.id_articulo'], name='trades_articulo_ofrecido_id_fkey'),
    sa.ForeignKeyConstraint(['articulo_solicitado_id'], ['items.id_articulo'], name='trades_articulo_solicitado_id_fkey'),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id_usuario'], name='trades_usuario_id_fkey'),
    sa.ForeignKeyConstraint(['usuario_ofertador_id'], ['users.id_usuario'], name='trades_usuario_ofertador_id_fkey'),
    sa.ForeignKeyConstraint(['usuario_solicitante_id'], ['users.id_usuario'], name='trades_usuario_solicitante_id_fkey'),
    sa.PrimaryKeyConstraint('id_trade', name='trades_pkey')
    )
    # ### end Alembic commands ###
